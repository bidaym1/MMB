cmake_minimum_required(VERSION 3.21)
message(STATUS "START")
set(CMAKE_CXX_COMPILER "/usr/bin/clang")
set(CMAKE_C_COMPILER "/usr/bin/clang") 
set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -std=c++11")
set(GCC_COVERAGE_COMPILE_FLAGS "${GCC_COVERAGE_COMPILE_FLAGS} -undefined dynamic_lookup")
project(TST)
IF(APPLE)
  SET(CMAKE_HOST_SYSTEM_PROCESSOR arm64)
  SET(CMAKE_OSX_ARCHITECTURES "arm64" CACHE STRING "Build architectures for Mac OS X" FORCE)
ENDIF(APPLE)
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${GCC_COVERAGE_COMPILE_FLAGS}")

set(SOURCES bindings.cpp
	ca.cpp
	cell.cpp
	conrec.cpp
	crash.cpp
	dish.cpp
	hull.cpp
	info.cpp
	misc.cpp
	output.cpp
	parameter.cpp
	parse.cpp
	pde.cpp
	random.cpp
	warning.cpp)
add_library(libTST SHARED)
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${SOURCE_FILES})

# Add library
message(STATUS "source files = ${SOURCES}")

